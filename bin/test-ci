#!/usr/bin/env bash
#
# Note: Please run from the project's base directory (./bin/test-ci)


option_map() {
  local key="$1"

  case $key in
    hii/null)
      echo "-nNC 'ALS=#FF0000,HSP=#7030A0,PLS=#0000FF,PMA=#00B050;A=#000;A=#000;A=#000'" ;;
    core-color/ObesityAndHypertension)
      echo "-nNC '#4f4,#f44,#ffc800,#98d6ff;#fff,#cffdfd,8ff,#0ff,#433efe'" ;;
  esac
}

banner() {
  echo
  echo "----------------------------------------------------------------------------"
  echo "$@"
  echo "----------------------------------------------------------------------------"
}

run_cmd() {
  echo
  echo "run_cmd> $@"
  echo

  eval "$@"; rc=$?

  if [[ $rc -ne 0 ]]; then
    error "command exited with return code: $rc"
    exit $rc
  fi
}

error() {
  echo -- "$@" 1>&2
}

error_and_exit() {
  error "$@"; exit 1;
}

contains_files_of_extension() {
  local test_group_name="$1"
  local extension="$2"
  [[ $( ls testdata/ci/${test_group_name}/input/*.${extension} 2>/dev/null | wc -l ) -ne 0 ]]
}

get_input_files() {
  local test_group_name="$1"
  local extension="$2"
  if contains_files_of_extension ${test_group_name} ${extension}; then
    for input_file in testdata/ci/${test_group_name}/input/*.${extension}; do
      echo $input_file
    done
  fi
}

test_output_with_expected() {
  local input_file="$1"
  local test_group_name="$2"
  local extension="$3"

  local output_prefix="$TMP_DIR/${test_group_name}"
  local testdata_dir="testdata/ci/${test_group_name}"
  local short_name="$( basename ${input_file} .${extension} )"

  local cli_options="$( option_map ${test_group_name}/${short_name} )"

  [[ -d ${output_prefix}/${short_name} ]] || mkdir -p ${output_prefix}/${short_name}

  banner "${test_group_name}/${short_name}"

  cp ${input_file} ${output_prefix}/${short_name}/input.txt

  run_cmd src/madeline2 ${cli_options} --outputprefix ${output_prefix}/${short_name} ${input_file} \
    2>&1 | tee ${output_prefix}/${short_name}/log.txt

  if ! cmp ${output_prefix}/${short_name}.xml ${testdata_dir}/expected/${short_name}.xml; then
    error_and_exit "'${output_prefix}/${short_name}.xml' differs from '${testdata_dir}/expected/${short_name}.xml'"
  fi
}

generate_index_page() {
  local commit_id=${TRAVIS_COMMIT}

  > $TMP_DIR/index.html

  echo "<html><body>" >> $TMP_DIR/index.html
  echo "Generated: $(date +%FT%T%z) ${commit_id}" >> $TMP_DIR/index.html
  echo "<ul>" >> $TMP_DIR/index.html

  for f in $( find $TMP_DIR -type f | grep -v 'index.html' | grep -v '\.txt$' ); do
    f=${f#$TMP_DIR/}
    subdir=${f%.xml}
    echo "<li><a href='${f}'>${f}</a> [<a href='${subdir}/input.txt'>input</a>] [<a href='${subdir}/log.txt'>log</a>]</li>"
  done | sort >> $TMP_DIR/index.html

  echo "</ul>" >> $TMP_DIR/index.html
  echo "</body></html>" >> $TMP_DIR/index.html

}

madeline=src/madeline2

input_data_extensions="xml data"

TMP_DIR=tmp/ci/output

[[ -d $TMP_DIR ]] && rm -rf $TMP_DIR

mkdir -p $TMP_DIR

if [[ $1 == '-r' ]]; then
  shift
  [[ -f $madeline ]] && rm $madeline
fi

if [[ ! -f $madeline ]]; then
  cmake . && make
fi

for test_group_name in $(ls testdata/ci ); do
  for extension in ${input_data_extensions}; do
    for input_file in $( get_input_files ${test_group_name} ${extension} ); do
      test_output_with_expected ${input_file} ${test_group_name} ${extension}
    done
  done
done

rc=$?

generate_index_page

exit $rc
